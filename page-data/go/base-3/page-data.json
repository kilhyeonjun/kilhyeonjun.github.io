{"componentChunkName":"component---src-templates-blog-post-js","path":"/go/base-3/","result":{"data":{"site":{"siteMetadata":{"title":"성장 기록 블로그","author":"kilhyeonjun","siteUrl":"https://kilhyeonjun.github.io","comment":{"disqusShortName":"","utterances":"kilhyeonjun/kilhyeonjun.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"fc608a57-426a-550d-9f9e-4b81f6c07a3f","excerpt":"함수 반복되는 코드를 묶어서 실행하는 코드 블럭의 단위입니다. func 키워드를 사용하여 함수를 정의합니다. 파라미터명 뒤에 파라미터의 자료형을 정의 합니다. return type은 함수명 뒤에 적습니다. 소수 판별 프로그램 소수 판별 함수 구간별 소수 판별 함수 main 함수","html":"<h1 id=\"함수\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98\" aria-label=\"함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수</h1>\n<ul>\n<li>반복되는 코드를 묶어서 실행하는 코드 블럭의 단위입니다.</li>\n<li>func 키워드를 사용하여 함수를 정의합니다.</li>\n<li>파라미터명 뒤에 파라미터의 자료형을 정의 합니다.</li>\n<li>return type은 함수명 뒤에 적습니다.</li>\n</ul>\n<h2 id=\"소수-판별-프로그램\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%88%98-%ED%8C%90%EB%B3%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8\" aria-label=\"소수 판별 프로그램 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소수 판별 프로그램</h2>\n<ul>\n<li>소수 판별 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">func <span class=\"token function\">prime</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:</span><span class=\"token operator\">=</span> <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> nil <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t\tos<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span> p <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>number <span class=\"token punctuation\">,</span><span class=\"token string\">\"는(은) 소수입니다!\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>number <span class=\"token punctuation\">,</span><span class=\"token string\">\"는(은) 소수가 아닙니다~\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nfunc <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span>n int<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>bool<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d는(은) 소수가 아닙니다~\"</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> n<span class=\"token operator\">%</span>i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>nil\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> nil <span class=\"token comment\">// true 리턴이면 소수, false 소수 X</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>구간별 소수 판별 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">func <span class=\"token function\">primeRange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a int<span class=\"token punctuation\">,</span> b int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> a<span class=\"token operator\">></span>b <span class=\"token punctuation\">{</span>\n\t\ttemp <span class=\"token operator\">:</span><span class=\"token operator\">=</span> a\n\t\ta <span class=\"token operator\">=</span>b\n\t\tb <span class=\"token operator\">=</span>temp\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:</span><span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>b<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">{</span>\n\t\tp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:</span><span class=\"token operator\">=</span> <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> nil <span class=\"token punctuation\">{</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t\t\tos<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span> p<span class=\"token punctuation\">{</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"는(은) 소수가 아닙니다~\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>main 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">func <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">var</span> menu int<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MENU : 1) 소수판정 2) 구간 소수판정 : \"</span><span class=\"token punctuation\">)</span>\n\t\t_<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:</span><span class=\"token operator\">=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>menu<span class=\"token punctuation\">)</span>\n\n\t\t<span class=\"token keyword\">if</span>  err <span class=\"token operator\">!=</span> nil<span class=\"token punctuation\">{</span>\n\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">switch</span> menu<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">var</span> <span class=\"token keyword\">in</span> int<span class=\"token punctuation\">;</span>\n\t\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"정수입력 : \"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t_<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:</span><span class=\"token operator\">=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">)</span>\n\n\t\t\t\t<span class=\"token keyword\">if</span>  err <span class=\"token operator\">!=</span> nil<span class=\"token punctuation\">{</span>\n\t\t\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token function\">prime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">var</span> n1<span class=\"token punctuation\">,</span> n2 int<span class=\"token punctuation\">;</span>\n\t\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"정수 2개 입력 : \"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t_<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:</span><span class=\"token operator\">=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>n1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n2<span class=\"token punctuation\">)</span>\n\n\t\t\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> nil<span class=\"token punctuation\">{</span>\n\t\t\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token function\">primeRange</span><span class=\"token punctuation\">(</span>n1<span class=\"token punctuation\">,</span> n2<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"프로그램을 종료합니다\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\tos<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Go 기본 명령어 (3)","date":"September 29, 2021"}}},"pageContext":{"slug":"/go/base-3/","previous":{"fields":{"slug":"/hadoop/base-2/"},"frontmatter":{"title":"hadoop 환경 설치 (2)"}},"next":{"fields":{"slug":"/go/base-4/"},"frontmatter":{"title":"Go 기본 명령어 (4)"}}}}}