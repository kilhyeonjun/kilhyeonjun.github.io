{"componentChunkName":"component---src-templates-blog-post-js","path":"/go/go-base-3 copy/","result":{"data":{"site":{"siteMetadata":{"title":"성장 기록 블로그","author":"kilhyeonjun","siteUrl":"https://kilhyeonjun.github.io","comment":{"disqusShortName":"","utterances":"kilhyeonjun/kilhyeonjun.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"611e48b9-2f49-50bf-807a-0689f16c9803","excerpt":"함수 반복되는 코드를 묶어서 실행하는 코드 블럭의 단위입니다. func 키워드를 사용하여 함수를 정의합니다. 파라미터명 뒤에 파라미터의 자료형을 정의 합니다. return type은 함수명 뒤에 적습니다. 소수 판별 프로그램 소수 판별 함수 구간별 소수 판별 함수 main 함수","html":"<h1 id=\"함수\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98\" aria-label=\"함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수</h1>\n<ul>\n<li>반복되는 코드를 묶어서 실행하는 코드 블럭의 단위입니다.</li>\n<li>func 키워드를 사용하여 함수를 정의합니다.</li>\n<li>파라미터명 뒤에 파라미터의 자료형을 정의 합니다.</li>\n<li>return type은 함수명 뒤에 적습니다.</li>\n</ul>\n<h2 id=\"소수-판별-프로그램\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%88%98-%ED%8C%90%EB%B3%84-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8\" aria-label=\"소수 판별 프로그램 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소수 판별 프로그램</h2>\n<ul>\n<li>소수 판별 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"golang\"><pre class=\"language-golang\"><code class=\"language-golang\">func prime(number int){\n\tp, err := isPrime(number)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(0)\n\t}\n\n\tif p {\n\t\tfmt.Println(number ,&quot;는(은) 소수입니다!&quot;)\n\t}else {\n\t\tfmt.Println(number ,&quot;는(은) 소수가 아닙니다~&quot;)\n\t}\n}\n\nfunc isPrime(n int) (bool, error) {\n\tif n &lt; 2 {\n\t\treturn false, fmt.Errorf(&quot;%d는(은) 소수가 아닙니다~&quot;, n)\n\t}\n\n\tfor i := 2; i &lt; n; i++ {\n\t\tif n%i == 0 {\n\t\t\treturn false,nil\n\t\t}\n\t}\n\treturn true, nil // true 리턴이면 소수, false 소수 X\n}</code></pre></div>\n<ul>\n<li>구간별 소수 판별 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"golang\"><pre class=\"language-golang\"><code class=\"language-golang\">func primeRange(a int, b int){\n\tif a&gt;b {\n\t\ttemp := a\n\t\ta =b\n\t\tb =temp\n\t}\n\tfor i := a; i&lt;=b; i++{\n\t\tp, err := isPrime(i)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(0)\n\t\t}\n\t\tif p{\n\t\t\tfmt.Print(i, &quot; &quot;)\n\t\t}else {\n\t\t\tfmt.Println( &quot;는(은) 소수가 아닙니다~&quot;)\n\t\t}\n\t}\n}</code></pre></div>\n<ul>\n<li>main 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"golang\"><pre class=\"language-golang\"><code class=\"language-golang\">func main() {\n\tvar menu int;\n\n\tfor true{\n\t\tfmt.Print(&quot;MENU : 1) 소수판정 2) 구간 소수판정 : &quot;)\n\t\t_, err := fmt.Scanln(&amp;menu)\n\n\t\tif  err != nil{\n\t\t\tlog.Fatal(err)\n\t\t}\n\n\t\tswitch menu{\n\t\t\tcase 1:\n\t\t\t\tvar in int;\n\t\t\t\tfmt.Print(&quot;정수입력 : &quot;)\n\t\t\t\t_, err := fmt.Scanln(&amp;in)\n\n\t\t\t\tif  err != nil{\n\t\t\t\t\tlog.Fatal(err)\n\t\t\t\t}\n\t\t\t\tprime(in)\n\t\t\tcase 2:\n\t\t\t\tvar n1, n2 int;\n\t\t\t\tfmt.Print(&quot;정수 2개 입력 : &quot;)\n\t\t\t\t_, err := fmt.Scanln(&amp;n1, &amp;n2)\n\n\t\t\t\tif err != nil{\n\t\t\t\t\tlog.Fatal(err)\n\t\t\t\t}\n\t\t\t\tprimeRange(n1, n2)\n\t\t\tdefault:\n\t\t\t\tfmt.Print(&quot;프로그램을 종료합니다&quot;)\n\t\t\t\tos.Exit(0)\n\t\t}\n\n\t}\n}</code></pre></div>","frontmatter":{"title":"Go 기본 명령어 (3)","date":"September 29, 2021"}}},"pageContext":{"slug":"/go/go-base-3 copy/","previous":{"fields":{"slug":"/go/go-base-2/"},"frontmatter":{"title":"Go 기본 명령어 (2)"}},"next":{"fields":{"slug":"/go/go-base-3/"},"frontmatter":{"title":"Go 기본 명령어 (3)"}}}}}