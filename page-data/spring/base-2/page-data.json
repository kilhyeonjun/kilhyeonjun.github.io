{"componentChunkName":"component---src-templates-blog-post-js","path":"/spring/base-2/","result":{"data":{"site":{"siteMetadata":{"title":"성장 기록 블로그","author":"kilhyeonjun","siteUrl":"https://kilhyeonjun.github.io","comment":{"disqusShortName":"","utterances":"kilhyeonjun/kilhyeonjun.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"c85c98e8-8b27-5ddd-9578-1d01c201204b","excerpt":"해당 게시물은 이 강의를 보고 제작하게되었습니다. ※ JPA 란? 자바 프로그램을 할때 영구적으로 데이터를 저장하기 위해서 필요한 인터페이스 1. Java Persistence API 이다. Persistence 란? 영속성(persistence)은 데이터를 생성한 프로그램의 실행이 종료되더라도 사라지지 않는 데이터의 특성을 의미합니다 API 란 Application Programming Interface…","html":"<p>해당 게시물은 이 <a href=\"https://edu.goorm.io/learn/lecture/24604/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-%EA%B0%9C%EB%85%90%EC%A0%95%EB%A6%AC\">강의</a>를 보고 제작하게되었습니다.</p>\n<h1 id=\"-jpa-란\" style=\"position:relative;\"><a href=\"#-jpa-%EB%9E%80\" aria-label=\" jpa 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>※ JPA 란?</h1>\n<ul>\n<li>자바 프로그램을 할때 영구적으로 데이터를 저장하기 위해서 필요한 인터페이스</li>\n</ul>\n<h2 id=\"1-java-persistence-api-이다\" style=\"position:relative;\"><a href=\"#1-java-persistence-api-%EC%9D%B4%EB%8B%A4\" aria-label=\"1 java persistence api 이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Java Persistence API 이다.</h2>\n<h3 id=\"persistence-란\" style=\"position:relative;\"><a href=\"#persistence-%EB%9E%80\" aria-label=\"persistence 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Persistence 란?</h3>\n<ul>\n<li>영속성(persistence)은 데이터를 생성한 프로그램의 실행이 종료되더라도 사라지지 않는 데이터의 특성을 의미합니다</li>\n</ul>\n<h3 id=\"api-란\" style=\"position:relative;\"><a href=\"#api-%EB%9E%80\" aria-label=\"api 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API 란</h3>\n<ul>\n<li>Application Programming Interface 의 약자로 응용 프로그램에서 사용할 수 있도록, 운영 체제나 프로그래밍 언어가 제공하는 기능을 제어할 수 있게 만든 인터페이스를 뜻합니다.</li>\n</ul>\n<h3 id=\"interface-란\" style=\"position:relative;\"><a href=\"#interface-%EB%9E%80\" aria-label=\"interface 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interface 란</h3>\n<ul>\n<li>인터페이스(interface)는 자바 프로그래밍 언어에서 클래스들이 구현해야 하는 동작을 지정하는데 사용되는 추상 자료형입니다.</li>\n<li>상하관계가 존재하는 약속이라고 볼 수 있습니다.</li>\n<li>이들은 프로토콜과 비슷합니다.</li>\n</ul>\n<h3 id=\"protocol-란\" style=\"position:relative;\"><a href=\"#protocol-%EB%9E%80\" aria-label=\"protocol 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>protocol 란</h3>\n<ul>\n<li>동등한 관계의 약속이라고 볼 수 있습니다.</li>\n</ul>\n<h2 id=\"2-orm-기술이다\" style=\"position:relative;\"><a href=\"#2-orm-%EA%B8%B0%EC%88%A0%EC%9D%B4%EB%8B%A4\" aria-label=\"2 orm 기술이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. ORM 기술이다.</h2>\n<h3 id=\"orm-이란\" style=\"position:relative;\"><a href=\"#orm-%EC%9D%B4%EB%9E%80\" aria-label=\"orm 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ORM 이란</h3>\n<ul>\n<li>Object Relational Mapping의 약자로 객체와 관계형 데이터베이스의 데이터를 자동으로 매핑(연결)해주는 것을 말합니다.</li>\n</ul>\n<h2 id=\"3-반복적인-crud-작업을-생략하게-해준다\" style=\"position:relative;\"><a href=\"#3-%EB%B0%98%EB%B3%B5%EC%A0%81%EC%9D%B8-crud-%EC%9E%91%EC%97%85%EC%9D%84-%EC%83%9D%EB%9E%B5%ED%95%98%EA%B2%8C-%ED%95%B4%EC%A4%80%EB%8B%A4\" aria-label=\"3 반복적인 crud 작업을 생략하게 해준다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 반복적인 CRUD 작업을 생략하게 해준다.</h2>\n<ul>\n<li>Select, Select All, Delete, Update, Insert와 같은 단순 반복적인 CRUD를 메소드 하나로 실행 가능합니다.</li>\n</ul>\n<h2 id=\"4-영속성-컨텍스트를-가지고-있다\" style=\"position:relative;\"><a href=\"#4-%EC%98%81%EC%86%8D%EC%84%B1-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EA%B0%80%EC%A7%80%EA%B3%A0-%EC%9E%88%EB%8B%A4\" aria-label=\"4 영속성 컨텍스트를 가지고 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 영속성 컨텍스트를 가지고 있다.</h2>\n<h3 id=\"영속성-컨텍스트-란\" style=\"position:relative;\"><a href=\"#%EC%98%81%EC%86%8D%EC%84%B1-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%9E%80\" aria-label=\"영속성 컨텍스트 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>영속성 컨텍스트 란?</h3>\n<ul>\n<li>엔티티를 영구 저장하는 환경이라는 뜻입니다.</li>\n<li>애플리케이션과 데이터베이스 사이에서 객체를 보관하는 가상의 데이터베이스 같은 역할을 합니다.</li>\n<li>엔티티 매니저를 통해 엔티티를 저장하거나 조회하면 엔티티 매니저는 영속성 컨텍스트에 엔티티를 보관하고 관리합니다.</li>\n</ul>\n<h2 id=\"5-db와-oop의-불일치성을-해결하기-위한-방법론을-제공한다-db는-객체저장-불가능\" style=\"position:relative;\"><a href=\"#5-db%EC%99%80-oop%EC%9D%98-%EB%B6%88%EC%9D%BC%EC%B9%98%EC%84%B1%EC%9D%84-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%9D%84-%EC%A0%9C%EA%B3%B5%ED%95%9C%EB%8B%A4-db%EB%8A%94-%EA%B0%9D%EC%B2%B4%EC%A0%80%EC%9E%A5-%EB%B6%88%EA%B0%80%EB%8A%A5\" aria-label=\"5 db와 oop의 불일치성을 해결하기 위한 방법론을 제공한다 db는 객체저장 불가능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. DB와 OOP의 불일치성을 해결하기 위한 방법론을 제공한다. (DB는 객체저장 불가능)</h2>\n<ul>\n<li>DB는 객체 타입의 데이터를 가질 수 없습니다.</li>\n<li>그러나 테이블을 클래스로 모델링할 때, ORM을 이용하면 모델링된 클래스는 객체를 가질 수 있습니다.</li>\n</ul>\n<h2 id=\"6-oop의-관점에서-모델링을-할-수-있게-해준다-상속-컴포지션-연관관계\" style=\"position:relative;\"><a href=\"#6-oop%EC%9D%98-%EA%B4%80%EC%A0%90%EC%97%90%EC%84%9C-%EB%AA%A8%EB%8D%B8%EB%A7%81%EC%9D%84-%ED%95%A0-%EC%88%98-%EC%9E%88%EA%B2%8C-%ED%95%B4%EC%A4%80%EB%8B%A4-%EC%83%81%EC%86%8D-%EC%BB%B4%ED%8F%AC%EC%A7%80%EC%85%98-%EC%97%B0%EA%B4%80%EA%B4%80%EA%B3%84\" aria-label=\"6 oop의 관점에서 모델링을 할 수 있게 해준다 상속 컴포지션 연관관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. OOP의 관점에서 모델링을 할 수 있게 해준다. (상속, 컴포지션, 연관관계)</h2>\n<h3 id=\"상속-이란\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D-%EC%9D%B4%EB%9E%80\" aria-label=\"상속 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속 이란</h3>\n<ul>\n<li>상속 받은 클래스를 모델링할 때, 상속 받은 필드도 테이블의 컬럼에 추가됩니다.</li>\n</ul>\n<h3 id=\"컴포지션-이란\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8F%AC%EC%A7%80%EC%85%98-%EC%9D%B4%EB%9E%80\" aria-label=\"컴포지션 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴포지션 이란</h3>\n<ul>\n<li>상속과 다르게 클래스를 결합하는 것으로 기존의 클래스가 새로운 클래스에 포함됩니다.</li>\n</ul>\n<h2 id=\"7-방언-처리가-용이하여-migration하기-좋음-유지보수에도-좋음\" style=\"position:relative;\"><a href=\"#7-%EB%B0%A9%EC%96%B8-%EC%B2%98%EB%A6%AC%EA%B0%80-%EC%9A%A9%EC%9D%B4%ED%95%98%EC%97%AC-migration%ED%95%98%EA%B8%B0-%EC%A2%8B%EC%9D%8C-%EC%9C%A0%EC%A7%80%EB%B3%B4%EC%88%98%EC%97%90%EB%8F%84-%EC%A2%8B%EC%9D%8C\" aria-label=\"7 방언 처리가 용이하여 migration하기 좋음 유지보수에도 좋음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 방언 처리가 용이하여 Migration하기 좋음. 유지보수에도 좋음.</h2>\n<ul>\n<li>방언(dialect) 처리가 용이하다는 뜻은 연결할 수 있는 DB의 종류가 다양하다는 뜻입니다.</li>\n<li>JPA에는 추상화 객체가 있는데, 이 추상화 객체를 통해서 여러 DBMS에 연결 할 수 있기 때문에 Migration도 쉽고 유지보수 하기도 좋습니다.</li>\n</ul>","frontmatter":{"title":"springboot 2.JPA 란?","date":"September 12, 2021"}}},"pageContext":{"slug":"/spring/base-2/","previous":{"fields":{"slug":"/go/base-1/"},"frontmatter":{"title":"Go 기본 명령어 (1)"}},"next":{"fields":{"slug":"/spring/base-3/"},"frontmatter":{"title":"springboot 3.동작원리"}}}}}